import socket
import threading

# 포트를 스캔하는 함수
def scan_port(ip, port, open_ports):
    try:
        with socket.socket(socket.AF_INET, socket.SOCK_STREAM) as s:
            s.settimeout(1)  # 타임아웃 설정
            result = s.connect_ex((ip, port))
            if result == 0:
                open_ports.append(port)
    except socket.error as e:
        print(f'소켓 오류: {e}')

# 스레드 기반 포트 스캔 함수
def scan_ports(ip, start_port, end_port):
    open_ports = []
    threads = []
    total_ports = end_port - start_port + 1
    
    print(f'포트 스캔 시작: {start_port}부터 {end_port}까지')
    
    for port in range(start_port, end_port + 1):
        thread = threading.Thread(target=scan_port, args=(ip, port, open_ports))
        threads.append(thread)
        thread.start()
        
        # 진행 상황 표시
        if (port - start_port + 1) % (total_ports // 20) == 0:
            progress_percentage = ((port - start_port + 1) / total_ports) * 100
            print(f'{progress_percentage:.1f}% 완료')

    # 모든 스레드가 끝날 때까지 기다림
    for thread in threads:
        thread.join()
    
    # 최종 진행 상황 출력
    print('포트 스캔 완료')
    return open_ports

# 도메인 이름을 IP 주소로 변환
def get_ip_from_domain(domain):
    try:
        ip = socket.gethostbyname(domain)
        return ip
    except socket.gaierror as e:
        print(f'도메인 이름 확인 오류: {e}')
        return None

# 스캔할 도메인과 포트 범위 설정
domain = 'webmail.kbfg.com'
start_port = 1
end_port = 65535

# 도메인 이름을 IP 주소로 변환
target_ip = get_ip_from_domain(domain)
if target_ip:
    print(f'{domain}의 IP 주소: {target_ip}')
    # 포트 스캔 실행
    open_ports = scan_ports(target_ip, start_port, end_port)
    
    # 결과 출력
    if open_ports:
        print(f'열린 포트: {open_ports}')
    else:
        print('열린 포트가 없습니다.')
