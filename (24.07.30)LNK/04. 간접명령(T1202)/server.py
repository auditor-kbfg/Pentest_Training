import http.server
import socketserver
import json
from datetime import datetime

PORT = 8000

class MyHandler(http.server.SimpleHTTPRequestHandler):
    def do_GET(self):
        if self.path == '/server.ps1':
            self.send_response(200)
            self.send_header('Content-type', 'text/plain')
            self.end_headers()
            with open('server.ps1', 'rb') as file:
                self.wfile.write(file.read())
        else:
            self.send_error(404)

    def do_POST(self):
        if self.path == '/data':
            content_length = int(self.headers.get('Content-Length', 0))
            post_data = self.rfile.read(content_length)
            print(f"Content-Length: {content_length}")
            print("Raw POST data received:")
            print(post_data)

            if post_data:
                try:
                    data = json.loads(post_data.decode('utf-8'))
                    print("Received data:")
                    print(json.dumps(data, indent=2))
                    
                    # 로그 파일에 데이터 저장
                    self.log_data(data)
                    
                    self.send_response(200)
                    self.end_headers()
                except json.JSONDecodeError:
                    print("Failed to decode JSON data.")
                    self.send_error(400, "Invalid JSON")
            else:
                print("No POST data received.")
                self.send_error(400, "No data received")
        else:
            self.send_error(404)

    def log_data(self, data):
        timestamp = datetime.now().strftime("%Y-%m-%d %H:%M:%S")
        log_entry = f"{data['hostname']}, {data['ip_address']}, {timestamp}\n"
        
        with open('server.log', 'a') as log_file:
            
            log_file.write(log_entry)
        
        print(f"Data logged: {log_entry.strip()}")

with socketserver.TCPServer(("", PORT), MyHandler) as httpd:
    print(f"Serving at port {PORT}")
    httpd.serve_forever()