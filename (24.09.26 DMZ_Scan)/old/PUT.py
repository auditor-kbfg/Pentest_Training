import requests
from concurrent.futures import ThreadPoolExecutor
import sys
from datetime import datetime

def parse_ip_port_list(data):
    ip_port_dict = {}
    for line in data.split('\n'):
        if ':' in line:
            ip, ports = line.split(':')
            ip = ip.strip()
            ports = [int(p) for p in ports.strip().split(',') if p]
            ip_port_dict[ip] = ports
    return ip_port_dict

def send_put_request(ip, port, use_https):
    try:
        protocol = "https" if use_https else "http"
        url = f"{protocol}://{ip}:{port}/"
        response = requests.put(url, timeout=2, verify=False)
        return response.status_code, len(response.content)
    except requests.RequestException:
        return None, None

def save_put_results(ip, port, protocol, status_code, length):
    with open('put_results.txt', 'a') as file:
        file.write(f"{ip}:{port} ({protocol}) - Status: {status_code}, Length: {length}\n")
    print(f"PUT request results for {ip}:{port} ({protocol}) saved to put_results.txt")

def main():
    ip_port_data = """
    119.192.182.110: 
    119.192.182.111: 
    119.192.182.119: 80,443,8080
    119.192.182.120: 443
    119.192.182.121: 
    119.192.182.122: 1185
    119.192.182.123: 80,443
    119.192.182.124: 
    119.192.182.127: 443,8001,8002,8003,8005,8006,8007,8009,8010,18003
    119.192.182.128: 8001,8002,8003,8004
    119.192.182.129: 443
    119.192.182.130: 443,4243
    119.192.182.131: 443
    119.192.182.132: 443
    119.192.182.133: 
    119.192.182.134: 
    119.192.182.135: 
    119.192.182.136: 
    119.192.182.137: 
    119.192.182.138: 
    119.192.182.139: 
    119.192.182.140: 80
    119.192.182.141: 
    119.192.182.147: 80,443,8080
    119.192.182.148: 80,443,8080
    119.192.182.152: 
    119.192.182.153: 
    119.192.182.155: 443,8080
    119.192.182.156: 15601,15603
    119.192.182.157: 15601,15603
    119.192.182.161: 80,8800
    119.192.182.165: 6000,6002,6003,20443
    119.192.182.169: 
    119.192.182.184: 
    119.192.182.187: 
    119.192.182.191: 80,443
    119.192.182.192: 80,443
    119.192.182.201: 
    119.192.182.208: 
    119.192.182.209: 
    119.192.182.211: 
    119.192.182.214: 
    119.192.182.240: 
    119.192.182.33: 
    119.192.182.34: 
    119.192.182.37: 
    119.192.182.39: 443
    119.192.182.40: 
    119.192.182.47: 443,2185
    119.192.182.48: 443,8443
    119.192.182.50: 80,443,8080
    119.192.182.51: 
    119.192.182.52: 443
    119.192.182.53: 80,443
    119.192.182.54: 80
    119.192.182.55: 80
    119.192.182.56: 80,8080
    119.192.182.58: 
    119.192.182.59: 
    119.192.182.60: 80,443
    119.192.182.61: 443
    119.192.182.62: 80,443
    119.192.182.63: 443
    119.192.182.64: 
    119.192.182.66: 
    119.192.182.67: 
    119.192.182.72: 
    119.192.182.73: 
    119.192.182.76: 80,443
    119.192.182.77: 8080
    119.192.182.78: 80,8000,8080,10618,10619
    119.192.182.79: 443
    119.192.182.80: 80,443
    119.192.182.82: 
    119.192.182.83: 443
    119.192.182.84: 
    119.192.182.85: 
    119.192.182.86: 
    119.192.182.87: 
    119.192.182.88: 
    119.192.182.89: 
    119.192.182.91: 443,8522
    119.192.182.92: 
    119.192.182.98: 
    119.192.182.99: 
    210.124.124.155: 25,80,443
    210.124.124.156: 
    210.124.124.242: 
    210.124.124.70: 
    119.192.182.154: 
    119.192.182.98: 
    119.192.182.99: 
    210.124.124.101: 
    210.124.124.102: 
    210.124.124.103: 
    210.124.124.104: 
    210.124.124.105: 
    210.124.124.106: 
    210.124.124.107: 
    210.124.124.107: 
    210.124.124.108: 
    210.124.124.110: 
    210.124.124.117: 
    210.124.124.121: 
    210.124.124.122: 
    210.124.124.123: 
    210.124.124.124: 
    210.124.124.128: 
    210.124.124.130: 
    210.124.124.131: 443,9997
    210.124.124.132: 443,2165,2166,2185,2186,2285,2286,9997
    210.124.124.133: 
    210.124.124.134: 
    210.124.124.156: 
    210.124.124.159: 
    210.124.124.163: 
    210.124.124.165: 80,443,8080,58443
    210.124.124.190: 9303,10111,10121,10122,10123,13101,13102,13106,13109,13110,13112,14101,19001
    210.124.124.211: 
    210.124.124.239: 
    210.124.124.242: 
    210.124.124.33: 
    210.124.124.40: 80,8800
    210.124.124.48: 
    210.124.124.49: 
    210.124.124.51: 
    210.124.124.61: 
    210.124.124.62: 
    210.124.124.63: 
    210.124.124.64: 
    210.124.124.66: 80,8800,17877
    210.124.124.70: 
    210.124.124.91: 1185,1195
    210.124.124.94: 
    210.124.124.99: 
    """
    
    ip_port_dict = parse_ip_port_list(ip_port_data)
    
    for ip, ports in ip_port_dict.items():
        if not ports:
            print(f"Skipping {ip} as it has no open ports.")
            continue
        
        print(f"\nStarting scan for {ip}...")
        
        for port in ports:
            for use_https in [False, True]:
                protocol = "https" if use_https else "http"
                print(f"Sending PUT request to {ip}:{port} ({protocol})")
                status_code, length = send_put_request(ip, port, use_https)
                if status_code is not None:
                    save_put_results(ip, port, protocol, status_code, length)
                else:
                    print(f"No valid response from {ip}:{port} ({protocol})")
        
        print(f"Scan and analysis completed for {ip}")

if __name__ == "__main__":
    requests.packages.urllib3.disable_warnings(requests.packages.urllib3.exceptions.InsecureRequestWarning)
    print("Starting HTTP/HTTPS PUT request analysis script...")
    main()
    print("Script execution completed.")